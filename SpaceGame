import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.imageio.stream.FileImageInputStream;
import javax.imageio.stream.ImageInputStream;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;

class Ates {
	
	private int x;
	private int y;
	
	public Ates(int x, int y) {
		super();
		this.x = x;
		this.y = y;
	}

	public int getX() {
		return x;
	}

	public void setX(int x) {
		this.x = x;
	}

	public int getY() {
		return y;
	}

	public void setY(int y) {
		this.y = y;
	}
	
	
	
}

public class Oyun extends JPanel implements KeyListener,ActionListener {
	
	Timer timer = new Timer(5,this);
	private int gecen_sure = 0;
	private int harcanan_ates = 0;
	private BufferedImage image;
	private ArrayList<Ates> atesler = new ArrayList<Ates>();
	private int atesdirY = 1;
	private int topX = 0;
	private int topdirX = 2;
	private int uzayGemisiX = 0;
	private int dirUzayX = 20;
	

	public Oyun(){
		try {
			image = ImageIO.read(new FileImageInputStream(new File("UzayGemisi2.png")));
		} catch (FileNotFoundException e) {
			
			e.printStackTrace();
		} catch (IOException e) {
			
			e.printStackTrace();
		}
		setBackground(Color.BLACK);
		timer.start();
		
	}
	
	public boolean kontrolEt()
	{  //Atesle topun carpismasini kontrol ediyoruz
		for(Ates ates:atesler)
		{
			if(new Rectangle(ates.getX(),ates.getY(),10,20).intersects(new Rectangle(topX,0,20,20)))
			{
				return true;  //Carpma gerceklestiyse true degerini donduruyoruz
			}
		}
		return false;
	}

	@Override
	public void paint(Graphics g) {
		
		super.paint(g);
		
     	gecen_sure += 5;
		g.setColor(Color.red);
		g.fillOval(topX, 0, 20, 20);
		g.drawImage(image, uzayGemisiX, 500 ,image.getWidth() / 10,image.getHeight() / 10, this);
		for(Ates ates:atesler)
		{
			if(ates.getY() < 0)   //Panelden cikan atesleri siliyoruz
			{
				atesler.remove(ates);
			}
		}
		g.setColor(Color.blue);   //Ateslerin rengi
		for(Ates ates:atesler)
		{
			g.fillRect(ates.getX(), ates.getY(), 10, 20);  //ateslerin boyutu(sekli)
		}
		if(kontrolEt())  //Carpisma olduysa bu kontrolun icine giriyoruz
		{
			timer.stop();
			String message = "Kazandiniz....\n"+
			                 "Gecen sure: " + gecen_sure / 1000.0 +" saniye\n"+
			                 "Harcanan Ates: "+harcanan_ates;
			
			
		
		JOptionPane.showMessageDialog(this, message);
     	System.exit(0);
			
			                 
		}
	}
	

	@Override
	public void repaint() {
		
		super.repaint();
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		for(Ates ates:atesler)
		{
			ates.setY(ates.getY() - atesdirY);
		}
		topX += topdirX;
		if(topX >= 770)  //Top en sag koseye geldiginde
		{
			topdirX = -topdirX;		
		}
		if(topX <= 0)  //Top en sol kosye geldiginde
		{
			topdirX = -topdirX;
		}
		repaint();
		
	}

	@Override
	public void keyPressed(KeyEvent e) {
		int c = e.getKeyCode();
		if(c == KeyEvent.VK_LEFT)
		{
			if(uzayGemisiX <= 0)
			{
				uzayGemisiX = 0;
			}
			else
				uzayGemisiX -= dirUzayX;
		}
		else if(c == KeyEvent.VK_RIGHT)
		{
			if(uzayGemisiX >= 740)
			{
				uzayGemisiX = 740;
			}
			else
				uzayGemisiX  += dirUzayX;
		}
		else if(c == KeyEvent.VK_CONTROL)
		{
			atesler.add(new Ates(uzayGemisiX +15,490));
			harcanan_ates++;
		}
		
		
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		
		
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		
		
	}

}
